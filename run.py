#!/usr/bin/env python3
"""Arquivo principal para executar a aplica√ß√£o Flask."""

import os
import sys
from pathlib import Path

# Adicionar diret√≥rio raiz ao path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from app import create_app
from app.config.logging_config import setup_logging


def main():
    """Fun√ß√£o principal para executar a aplica√ß√£o."""
    # Criar aplica√ß√£o
    app = create_app()
    
    # Configurar sistema de logs
    try:
        logging_config = setup_logging(app)
        print("‚úì Sistema de logs configurado")
    except Exception as e:
        print(f"‚ö† Aviso ao configurar logs: {e}")
    
    print("‚úì Aplica√ß√£o inicializada com sucesso")
    
    # Obter configura√ß√µes do servidor
    host = os.getenv('FLASK_HOST', '127.0.0.1')
    port = int(os.getenv('FLASK_PORT', 5000))
    debug = os.getenv('FLASK_ENV') == 'development'
    
    print(f"\nüöÄ Iniciando aplica√ß√£o Facebook Scraper")
    print(f"üìç URL: http://{host}:{port}")
    print(f"üîß Modo: {'Desenvolvimento' if debug else 'Produ√ß√£o'}")
    print(f"üìä Banco: {app.config.get('SQLALCHEMY_DATABASE_URI', 'N/A')}")
    print(f"üìù Logs: logs/")
    print("\n" + "="*50)
    
    try:
        # Executar aplica√ß√£o
        app.run(
            host=host,
            port=port,
            debug=debug,
            threaded=True
        )
    except KeyboardInterrupt:
        print("\n\nüõë Aplica√ß√£o interrompida pelo usu√°rio")
    except Exception as e:
        print(f"\n‚ùå Erro ao executar aplica√ß√£o: {e}")
        sys.exit(1)


if __name__ == '__main__':
    main()